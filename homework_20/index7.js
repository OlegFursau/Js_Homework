// !На понедельник:
// !Задание 1:
//     ?Имеется следующий объект - {a: 1, b: 2, c: 3, d: 4}. Необходимо сделать так, чтобы в переменные a и b записались
//     ?соответствующие значения, а все, что осталось - в объект obj.

let a, b, rest;
({ a, b, ...rest } = { a: 1, b: 2, c: 3, d: 4 });

console.log(a);
console.log(b);
console.log(rest);


//   !Задание 2:
//     ?Запросить у пользователя имя и сохранить его в переменную.
//    ? Создать объект со свойством name, куда записать короткой записью значение имени пользователя, и методом sayHi,
//     ?который будет возвращать строку вида:
//       ?"Hi, (имя пользователя)!"
//     ?Имя пользователя получать уже из объекта.
//    ? Проверить работу метода. Убедиться в уместном использовании способов задания переменной.


let name = prompt('Введите имя').toUpperCase();
const obj = {
    name,
    sayHi() {
        return `Hi, ${this.name}!`
    },
}
console.log(obj.sayHi());


//   !Задание 3:
//     ?Написать функцию, которая будет принимать параметры x, y, z.
//     ?При вызове функции передать в неё первым параметром объект вида {a: 2, b: 3}, вторым параметром целое число.
//     X и y получаем из свойств переданного в функцию объекта a и b. У z значение по-умолчанию должно быть 1.
//     ?Функция должна возвращать результат возведения в степень y числа x, умноженный на z.
//     ?Валидацию опустить.

function pow(x, y, z = 1) {
    let a, b;
    ({ a, b } = { a: 2, b: 3 })
    x = a;
    y = b;
    return (x ** y) * z
}
console.log(pow({ a: 2, b: 3 }, 2));


//   !Задание 4:
//    ? Создать массив с именем и возрастом. Передать его в функцию. Функция должна принять его как два отдельных параметра
//    ? name и age и вернуть строку вида:
//    ?  "Hello, I'm (имя) and I'm (возраст) years old."
//    ? Не использовать деструктуризацию.

const arr = ['Oleg', 34];
const helloPhrase = (name, age) => {
    return ` "Hello, I'm ${name} and I'm ${age} years old."`
}
console.log(helloPhrase(...arr, arr));

//   !Задание 5:
//     ?Написать функцию, принимающую массив чисел. При вызове числа передаются в функцию отдельными параметрами, не массивом.
//     ?Вывести в консоль числа последовательно.
const arrNum = [1, 2, 3, 4, 5, 6, 7];

function showNumbers() {
    for (const i of arrNum) {
        console.log(i);
    }
}
console.log(showNumbers(...arrNum));




//   !Задание 6:
//    ? Переписать решение задачи с поиском гласных на новый синтаксис. Использовать перебирающий метод массива и поиск
//    ? элемента в массиве.
//      * function countVowelLetters(text) {
//           text = text.toLowerCase().split('');

//           var vowelLetters = ['а', 'я', 'ы', 'и', 'о', 'ё', 'у', 'ю', 'э', 'е', 'a', 'e', 'i', 'o', 'u', 'y'],
//               counter = 0;

//           for (var i = 0; i < vowelLetters.length; i++) {
//               for (var j = 0; j < text.length; j++) {
//                   vowelLetters[i] === text[j] && counter++;
//               }
//           }

//           return counter;
//       }

//      * countVowelLetters('Шла Саша по шоссе И сосала сУшку'); // 12

const getSumvowels = (str) => {
    let vowels = ['а', 'я', 'ы', 'и', 'о', 'ё', 'у', 'ю', 'э', 'е', 'a', 'e', 'i', 'o', 'u', 'y'];
    return str.toLowerCase().split('').reduce((sum, value) => {
        vowels.includes(value) ? sum++ : 0;
        return sum;
    }, 0);
}
console.log(getSumvowels('Шла Саша по шоссе И сосала сУшку'));